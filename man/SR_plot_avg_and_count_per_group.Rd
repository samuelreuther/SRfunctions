% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SR_plot_avg_and_count_per_group.R
\name{SR_plot_avg_and_count_per_group}
\alias{SR_plot_avg_and_count_per_group}
\title{Plot y by x}
\usage{
SR_plot_avg_and_count_per_group(
  df,
  column_name,
  group_cat,
  calculate_stats = TRUE,
  title = NULL,
  save = FALSE,
  path_output = getwd()
)
}
\arguments{
\item{df}{data.frame}

\item{column_name}{character}

\item{group_cat}{character}

\item{calculate_stats}{Boolean (default: TRUE ) If FALSE then provide DF with
the following columns: group_cat, AVG, COUNT}

\item{title}{character (default: NULL) provide optionally a title}

\item{save}{Boolean}

\item{path_output}{character}
}
\value{
ggplot
}
\description{
Generates different univariate plots, depending if x/y are numeric, or factor/character
}
\examples{
data("mtcars")
# Beispiel: einfach
SR_plot_avg_and_count_per_group(mtcars,
                                column_name = "hp", group_cat = "gear")
# Beispiel: viele Kategorien
SR_plot_avg_and_count_per_group(mtcars \%>\%
                                  dplyr::mutate(hp = round(hp)),
                                column_name = "mpg", group_cat = "hp")
# Beispiel: berechnete Statistiken
SR_plot_avg_and_count_per_group(df = mtcars \%>\%
                                       dplyr::group_by(gear) \%>\%
                                       dplyr::summarise(AVG = mean(hp, na.rm = TRUE),
                                                        AVG = round(AVG, 2),
                                                        COUNT = dplyr::n()),
                                column_name = "hp", group_cat = "gear",
                                calculate_stats = FALSE)
# Beispiel: Anteile in Prozent
SR_plot_avg_and_count_per_group(df = mtcars \%>\%
                                       dplyr::group_by(gear) \%>\%
                                       dplyr::summarise(AVG = mean(hp >= 100, na.rm = TRUE),
                                                        AVG = round(AVG, 3),
                                                        COUNT = dplyr::n()),
                                column_name = "hp >= 100", group_cat = "gear",
                                calculate_stats = FALSE)
# Beispiel: group_cat ist ein factor
SR_plot_avg_and_count_per_group(df = mtcars \%>\%
                                       dplyr::mutate(hp = as.character(round(hp))) \%>\%
                                       dplyr::group_by(hp) \%>\%
                                       dplyr::summarise(AVG = mean(mpg, na.rm = TRUE),
                                                        AVG = round(AVG, 1),
                                                        COUNT = dplyr::n()),
                                column_name = "mpg", group_cat = "hp",
                                calculate_stats = FALSE)
}
